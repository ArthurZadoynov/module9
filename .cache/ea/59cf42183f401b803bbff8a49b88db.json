{"id":"node_modules/@sentry-internal/tracing/node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js","dependencies":[{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry-internal\\tracing\\node_modules\\@sentry\\utils\\esm\\buildPolyfills\\_optionalChainDelete.js.map","includedInParent":true,"mtime":1723381622795},{"name":"F:\\urban\\Все работы\\module 9\\package.json","includedInParent":true,"mtime":1723907516383},{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry-internal\\tracing\\node_modules\\@sentry\\utils\\package.json","includedInParent":true,"mtime":1723381622765},{"name":"./_optionalChain.js","loc":{"line":1,"column":31,"index":31},"parent":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry-internal\\tracing\\node_modules\\@sentry\\utils\\esm\\buildPolyfills\\_optionalChainDelete.js","resolved":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry-internal\\tracing\\node_modules\\@sentry\\utils\\esm\\buildPolyfills\\_optionalChain.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._optionalChainDelete = _optionalChainDelete;\nvar _optionalChain2 = require(\"./_optionalChain.js\");\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  var result = (0, _optionalChain2._optionalChain)(ops);\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":22,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":22,"column":9}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":39,"column":36},"generated":{"line":22,"column":29}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":39,"column":37},"generated":{"line":22,"column":30}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":39,"column":40},"generated":{"line":22,"column":33}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":39,"column":62},"generated":{"line":22,"column":35}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":23,"column":2}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":23,"column":6}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":15},"generated":{"line":23,"column":12}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":17},"generated":{"line":23,"column":15}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":17},"generated":{"line":23,"column":19}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":31},"generated":{"line":23,"column":49}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":32},"generated":{"line":23,"column":51}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":35},"generated":{"line":23,"column":54}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":40,"column":37},"generated":{"line":23,"column":55}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":24,"column":2}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":25,"column":2}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":26,"column":2}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":27,"column":2}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":27,"column":9}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":16},"generated":{"line":27,"column":15}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":19},"generated":{"line":27,"column":19}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":19},"generated":{"line":27,"column":23}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":26},"generated":{"line":27,"column":26}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":26},"generated":{"line":27,"column":30}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":33},"generated":{"line":27,"column":33}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":44,"column":39},"generated":{"line":27,"column":39}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../src/buildPolyfills/_optionalChainDelete.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":35,"column":0}}],"sources":{"../../../src/buildPolyfills/_optionalChainDelete.ts":"// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { _optionalChain } from './_optionalChain';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nexport function _optionalChainDelete(ops: unknown[]): boolean {\n  const result = _optionalChain(ops) as boolean | null;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n"},"lineCount":null}},"error":null,"hash":"996d190045b7782479f3608d8fd3da7c","cacheData":{"env":{}}}