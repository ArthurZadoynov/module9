{"id":"node_modules/@sentry/utils/build/esm/buildPolyfills/_asyncNullishCoalesce.js","dependencies":[{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\buildPolyfills\\_asyncNullishCoalesce.js.map","includedInParent":true,"mtime":1723907470996},{"name":"F:\\urban\\Все работы\\module 9\\package.json","includedInParent":true,"mtime":1723907516383},{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\package.json","includedInParent":true,"mtime":1723907470981},{"name":"./_nullishCoalesce.js","loc":{"line":1,"column":33,"index":33},"parent":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\buildPolyfills\\_asyncNullishCoalesce.js","resolved":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\buildPolyfills\\_nullishCoalesce.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._asyncNullishCoalesce = _asyncNullishCoalesce;\nvar _nullishCoalesce2 = require(\"./_nullishCoalesce.js\");\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return (0, _nullishCoalesce2._nullishCoalesce)(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":7},"generated":{"line":45,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":22},"generated":{"line":45,"column":15}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":43},"generated":{"line":45,"column":36}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":44},"generated":{"line":45,"column":37}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":47},"generated":{"line":45,"column":40}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":58},"generated":{"line":45,"column":42}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":63},"generated":{"line":45,"column":47}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":40,"column":98},"generated":{"line":45,"column":49}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":46,"column":2}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":46,"column":9}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":46,"column":13}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":25},"generated":{"line":46,"column":47}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":26},"generated":{"line":46,"column":49}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":29},"generated":{"line":46,"column":52}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":31},"generated":{"line":46,"column":54}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":36},"generated":{"line":46,"column":59}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":41,"column":37},"generated":{"line":46,"column":60}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../src/buildPolyfills/_asyncNullishCoalesce.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":56,"column":0}}],"sources":{"../../../src/buildPolyfills/_asyncNullishCoalesce.ts":"// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { _nullishCoalesce } from './_nullishCoalesce';\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport async function _asyncNullishCoalesce(lhs: unknown, rhsFn: () => unknown): Promise<unknown> {\n  return _nullishCoalesce(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n"},"lineCount":null}},"error":null,"hash":"22c793a36f93262ff1bf005e132f3834","cacheData":{"env":{}}}