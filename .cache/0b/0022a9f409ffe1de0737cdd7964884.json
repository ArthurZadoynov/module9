{"id":"node_modules/@sentry/core/build/esm/utils/meta.js","dependencies":[{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\core\\build\\esm\\utils\\meta.js.map","includedInParent":true,"mtime":1723907473431},{"name":"F:\\urban\\Все работы\\module 9\\package.json","includedInParent":true,"mtime":1723907516383},{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\core\\build\\esm\\package.json","includedInParent":true,"mtime":1723907471223},{"name":"./traceData.js","loc":{"line":1,"column":29,"index":29},"parent":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\core\\build\\esm\\utils\\meta.js","resolved":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\core\\build\\esm\\utils\\traceData.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTraceMetaTags = getTraceMetaTags;\nvar _traceData = require(\"./traceData.js\");\n/**\n * Returns a string of meta tags that represent the current trace data.\n *\n * You can use this to propagate a trace from your server-side rendered Html to the browser.\n * This function returns up to two meta tags, `sentry-trace` and `baggage`, depending on the\n * current trace data state.\n *\n * @example\n * Usage example:\n *\n * ```js\n * function renderHtml() {\n *   return `\n *     <head>\n *       ${getTraceMetaTags()}\n *     </head>\n *   `;\n * }\n * ```\n *\n */\nfunction getTraceMetaTags() {\n  return Object.entries((0, _traceData.getTraceData)()).map(([key, value]) => `<meta name=\"${key}\" content=\"${value}\"/>`).join('\\n');\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":24,"column":7},"generated":{"line":29,"column":0}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":24,"column":16},"generated":{"line":29,"column":9}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":24,"column":32},"generated":{"line":29,"column":25}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":24,"column":32},"generated":{"line":29,"column":26}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":24,"column":43},"generated":{"line":29,"column":28}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":30,"column":2}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":30,"column":9}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":15},"generated":{"line":30,"column":15}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":30,"column":16}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":30,"column":23}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":30,"column":24}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":30,"column":28}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":30,"column":51}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":30,"column":53}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":38},"generated":{"line":30,"column":54}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":25,"column":38},"generated":{"line":30,"column":55}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":5},"generated":{"line":30,"column":56}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":30,"column":59}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":30,"column":60}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":10},"generated":{"line":30,"column":61}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":30,"column":62}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":30,"column":65}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":30,"column":67}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":30,"column":72}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":22},"generated":{"line":30,"column":73}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":30,"column":78}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":42},"generated":{"line":30,"column":93}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":45},"generated":{"line":30,"column":96}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":59},"generated":{"line":30,"column":110}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":64},"generated":{"line":30,"column":115}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":69},"generated":{"line":30,"column":120}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":26,"column":69},"generated":{"line":30,"column":121}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":27,"column":5},"generated":{"line":30,"column":122}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":30,"column":126}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":27,"column":10},"generated":{"line":30,"column":127}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":27,"column":14},"generated":{"line":30,"column":131}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":27,"column":15},"generated":{"line":30,"column":132}},{"source":"../../../src/utils/meta.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../../../src/utils/meta.ts":"import { getTraceData } from './traceData';\n\n/**\n * Returns a string of meta tags that represent the current trace data.\n *\n * You can use this to propagate a trace from your server-side rendered Html to the browser.\n * This function returns up to two meta tags, `sentry-trace` and `baggage`, depending on the\n * current trace data state.\n *\n * @example\n * Usage example:\n *\n * ```js\n * function renderHtml() {\n *   return `\n *     <head>\n *       ${getTraceMetaTags()}\n *     </head>\n *   `;\n * }\n * ```\n *\n */\nexport function getTraceMetaTags(): string {\n  return Object.entries(getTraceData())\n    .map(([key, value]) => `<meta name=\"${key}\" content=\"${value}\"/>`)\n    .join('\\n');\n}\n"},"lineCount":null}},"error":null,"hash":"c14780884456c839b55b8ecd048eb30b","cacheData":{"env":{}}}