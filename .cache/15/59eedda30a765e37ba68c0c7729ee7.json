{"id":"node_modules/@sentry/utils/build/esm/vendor/escapeStringForRegex.js","dependencies":[{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\vendor\\escapeStringForRegex.js.map","includedInParent":true,"mtime":1723907471344},{"name":"F:\\urban\\Все работы\\module 9\\package.json","includedInParent":true,"mtime":1723907516383},{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\package.json","includedInParent":true,"mtime":1723907470981}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escapeStringForRegex = escapeStringForRegex;\n// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 14+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":30,"column":7},"generated":{"line":36,"column":0}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":36,"column":9}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":30,"column":36},"generated":{"line":36,"column":29}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":30,"column":37},"generated":{"line":36,"column":30}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":30,"column":48},"generated":{"line":36,"column":41}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":30,"column":66},"generated":{"line":36,"column":43}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":37,"column":2}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":38,"column":2}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":39,"column":2}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":39,"column":9}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":20},"generated":{"line":39,"column":20}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":21},"generated":{"line":39,"column":21}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":28},"generated":{"line":39,"column":28}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":29},"generated":{"line":39,"column":29}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":50},"generated":{"line":39,"column":50}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":52},"generated":{"line":39,"column":52}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":39,"column":58}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":59},"generated":{"line":39,"column":59}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":60},"generated":{"line":39,"column":60}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":67},"generated":{"line":39,"column":67}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":68},"generated":{"line":39,"column":68}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":72},"generated":{"line":39,"column":72}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":74},"generated":{"line":39,"column":74}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":81},"generated":{"line":39,"column":81}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":33,"column":82},"generated":{"line":39,"column":82}},{"source":"../../../src/vendor/escapeStringForRegex.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":40,"column":0}}],"sources":{"../../../src/vendor/escapeStringForRegex.ts":"// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 14+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nexport function escapeStringForRegex(regexString: string): string {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n"},"lineCount":null}},"error":null,"hash":"a9dc6e7615d8fc3b7a6d3ae325fc08f1","cacheData":{"env":{}}}