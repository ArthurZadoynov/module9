{"id":"node_modules/@sentry/utils/build/esm/env.js","dependencies":[{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\env.js.map","includedInParent":true,"mtime":1723907471307},{"name":"F:\\urban\\Все работы\\module 9\\package.json","includedInParent":true,"mtime":1723907516383},{"name":"F:\\urban\\Все работы\\module 9\\node_modules\\@sentry\\utils\\build\\esm\\package.json","includedInParent":true,"mtime":1723907470981}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSDKSource = getSDKSource;\nexports.isBrowserBundle = isBrowserBundle;\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/env.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":15,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":18,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":19,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":21,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":24,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":25,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":26,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":27,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":25,"column":7},"generated":{"line":28,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":28,"column":9}},{"source":"../../src/env.ts","name":null,"original":{"line":25,"column":31},"generated":{"line":28,"column":24}},{"source":"../../src/env.ts","name":null,"original":{"line":25,"column":31},"generated":{"line":28,"column":25}},{"source":"../../src/env.ts","name":null,"original":{"line":25,"column":43},"generated":{"line":28,"column":27}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":29,"column":2}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":29,"column":9}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":29,"column":16}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":42},"generated":{"line":29,"column":41}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":46},"generated":{"line":29,"column":46}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":46},"generated":{"line":29,"column":57}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":61},"generated":{"line":29,"column":61}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":62},"generated":{"line":29,"column":62}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":63},"generated":{"line":29,"column":63}},{"source":"../../src/env.ts","name":null,"original":{"line":26,"column":88},"generated":{"line":29,"column":88}},{"source":"../../src/env.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":30,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":32,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":33,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":34,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":35,"column":0}},{"source":"../../src/env.ts","name":null,"original":{"line":32,"column":16},"generated":{"line":35,"column":9}},{"source":"../../src/env.ts","name":null,"original":{"line":32,"column":28},"generated":{"line":35,"column":21}},{"source":"../../src/env.ts","name":null,"original":{"line":32,"column":28},"generated":{"line":35,"column":22}},{"source":"../../src/env.ts","name":null,"original":{"line":32,"column":42},"generated":{"line":35,"column":24}},{"source":"../../src/env.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":36,"column":2}},{"source":"../../src/env.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":37,"column":2}},{"source":"../../src/env.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":37,"column":9}},{"source":"../../src/env.ts","name":null,"original":{"line":34,"column":30},"generated":{"line":37,"column":14}},{"source":"../../src/env.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":38,"column":0}}],"sources":{"../../src/env.ts":"/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n"},"lineCount":null}},"error":null,"hash":"158e48a0d369940fb5e1b52c5f3b9838","cacheData":{"env":{}}}